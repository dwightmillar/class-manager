"use strict";(self.webpackChunkclass_manager=self.webpackChunkclass_manager||[]).push([[357],{694:(e,t,s)=>{s.r(t),s.d(t,{default:()=>a});var n=s(466);function a(e){let{subject:t,deleteSubject:s,goBack:a}=e;return n.createElement("div",{style:{display:"inline-block"},className:"modal",tabIndex:"-1",role:"dialog"},n.createElement("div",{className:"modal-dialog",role:"document"},n.createElement("div",{className:"modal-content"},n.createElement("div",{className:"modal-header"},n.createElement("h5",{className:"modal-title"},"Deleting ",t)),n.createElement("div",{className:"modal-body"},n.createElement("p",null,"Deleting this will ",n.createElement("b",null,"permanently")," delete ",n.createElement("b",null,"all")," associated data.",n.createElement("br",null),"Are you sure you want to delete?")),n.createElement("div",{className:"modal-footer"},n.createElement("button",{autoFocus:!0,type:"button",className:"btn btn-secondary","data-dismiss":"modal",onClick:a},"Back"),n.createElement("button",{type:"button",className:"btn btn-danger",onClick:()=>{s(),a()}},"Delete")))))}},357:(e,t,s)=>{s.r(t),s.d(t,{default:()=>b});var n=s(123),a=s(466),l=s(387),r=s(374),d=s(694),i=s(429);function c(e){let{match:t,disabled:s}=e;return s?a.createElement(i.rU,{to:t.url+"/assignment",className:"dropdown-item"},"Add Assignment"):a.createElement("a",{className:"dropdown-item disabled"},"Add Assignment")}function o({numberOfAssignments:e,view:t,toggleView:s}){if(0==e)return a.createElement("button",{className:"dropdown-item disabled"},"View Assignments");let n="assignments"===t?"View Students":"View Assignments";return a.createElement("button",{className:"dropdown-item",onClick:s},n)}function u({showModal:e}){return a.createElement("button",{style:{color:"crimson"},className:"dropdown-item btn",onClick:e},"Delete Class")}function m(e){let{view:t,title:s,classId:l,assignmentAverages:i,classAverage:m,students:g,toggleView:v,toggleModal:E,setClasses:f}=e,A=a.createElement(d.default,{subject:"class",deleteSubject:()=>r.Z.class.delete(l).then((()=>f({data:{id:l}}))).catch((e=>console.error(e))),goBack:()=>E()}),b=g.length,p=Object.keys(i).length,h="assignments"===t?"No. of Assignments: ".concat(p):"Class Size: ".concat(b);return a.createElement("header",{className:"container-fluid"},a.createElement("div",{style:{display:"inline-block",height:"40px"}}),a.createElement("div",{style:{textAlign:"center"}},a.createElement("div",{className:"btn-group dropend"},a.createElement("button",{style:{fontSize:"3rem"},type:"button",className:"btn dropdown-toggle","data-bs-toggle":"dropdown","aria-expanded":"false"},s),a.createElement("ul",{className:"dropdown-menu"},a.createElement("li",null,a.createElement(o,{view:t,numberOfAssignments:p,toggleView:v})),a.createElement("li",null,a.createElement(c,(0,n.Z)({},e,{disabled:Boolean(g.length)}))),a.createElement("li",null,a.createElement("hr",{className:"dropdown-divider"})),a.createElement("li",null,a.createElement(u,{showModal:()=>{E(A)}})))),a.createElement("h2",null,h),a.createElement("h3",{style:{color:"#777"}},"Average Grade: ",m)))}const g=(0,a.lazy)((()=>s.e(163).then(s.bind(s,163)))),v=(0,a.lazy)((()=>s.e(239).then(s.bind(s,239)))),E=(0,a.lazy)((()=>s.e(455).then(s.bind(s,455)))),f=(0,a.lazy)((()=>s.e(584).then(s.bind(s,584)))),A=(0,a.lazy)((()=>s.e(850).then(s.bind(s,850))));function b(e){let{match:t,title:s,toggleModal:d,setClasses:i}=e;const[c,o]=(0,a.useState)({mounted:!1,view:"students",students:[],studentAverages:{},assignments:[],assignmentAverages:{},classAverage:"Calculating..."}),u=t.params.classId;if(null===s&&(s="Loading..."),(0,a.useEffect)((()=>{c.mounted||o({...c,mounted:!0})}),[c.mounted]),(0,a.useEffect)((()=>{c.mounted&&" "!==u&&r.Z.student.load(u).then((({data:e})=>{o({...c,view:"students",students:e,classAverage:e.length?"Calculating...":"N/A"})})).catch((e=>console.error(e)))}),[u,c.mounted]),(0,a.useEffect)((()=>{c.students.length&&b()}),[c.students]),(0,a.useEffect)((()=>{c.assignments.length&&function(){let e={},t=[...c.assignments];c.students.forEach((s=>{let n=0,a=0;t=t.filter((e=>e.student_id!=s.id||(isNaN(e.score)||(n+=parseInt(e.score)),a+=parseInt(e.totalpoints),!1)));let l=0!==a?(n/a*100).toFixed(2):"N/A";e[s.id]=l})),o({...c,studentAverages:e})}()}),[c.assignments]),(0,a.useEffect)((()=>{Object.keys(c.studentAverages).length&&function(){var e=0,t=0;for(let s in c.studentAverages)"N/A"!==c.studentAverages[s]&&(e+=parseFloat(c.studentAverages[s]),++t);if(t){if(isNaN(e/t))return!1}else e="N/A";e=(e/t).toFixed(2)+"%",o({...c,classAverage:e})}()}),[c.studentAverages]),(0,a.useEffect)((()=>{"Calculating..."!==c.classAverage&&function(){let e={};c.assignments.forEach((t=>{e[t.title]=!0})),Object.keys(e).forEach((t=>{let s=c.assignments.filter((e=>e.title===t)),n=0,a=0;s.forEach((e=>{n+=parseInt(e.totalpoints),a+=parseInt(e.score)})),e[t]=(a/n*100).toFixed(2)+"%"})),o({...c,assignmentAverages:e})}()}),[c.classAverage]),void 0===s)return a.createElement(A,null);function b(){r.Z.assignment.load(u).then((({data:e})=>{o({...c,assignments:e,classAverage:e.length?"Calculating...":"N/A"})})).catch((e=>console.error(e)))}function p(){let e=[...c.students],t=JSON.stringify({students:e});e.sort(((e,t)=>e.name.toLowerCase()>t.name.toLowerCase())),t===JSON.stringify({students:e})&&e.sort(((e,t)=>e.name.toLowerCase()<t.name.toLowerCase())),o({...c,students:e})}function h(){let e=[...c.students],t=JSON.stringify({students:e});e.sort(((e,t)=>!isNaN(parseFloat(c.studentAverages[e.id]))&&(!!isNaN(parseFloat(c.studentAverages[t.id]))||parseFloat(c.studentAverages[e.id])>parseFloat(c.studentAverages[t.id])))),t===JSON.stringify({students:e})&&e.sort(((e,t)=>!isNaN(parseFloat(c.studentAverages[t.id]))&&(!!isNaN(parseFloat(c.studentAverages[e.id]))||parseFloat(c.studentAverages[e.id])<parseFloat(c.studentAverages[t.id])))),o({...c,students:e})}function N(){if("assignments"===c.view)return o({...c,view:"students"});o({...c,view:"assignments"})}function w(e){const t=c.students.filter((t=>t.id!==e));o({...c,students:t})}function y(e,t){const s={id:e.insertId,name:t},n=[...c.students];n.push(s),o({...c,students:n})}return a.createElement(l.rs,null,a.createElement(l.AW,{exact:!0,path:"/".concat(u),render:e=>a.createElement(a.Fragment,null,a.createElement(m,(0,n.Z)({},e,{view:c.view,title:s,classId:u,assignmentAverages:c.assignmentAverages,classAverage:c.classAverage,students:c.students,setClasses:i,toggleView:N,toggleModal:d})),"students"===c.view?a.createElement(a.Suspense,{fallback:a.createElement("div",null,"Loading...")},a.createElement(g,(0,n.Z)({},e,{classId:u,students:c.students,assignments:c.assignments,averages:c.studentAverages,toggleModal:d,addStudentCallback:y,deleteStudentCallback:w,sort:{sortByName:p,sortByGrade:h}}))):a.createElement(a.Suspense,{fallback:a.createElement("div",null,"Loading...")},a.createElement(v,(0,n.Z)({},e,{assignments:c.assignments,averages:c.assignmentAverages}))))}),a.createElement(l.AW,{exact:!0,path:"/".concat(u,"/assignment"),render:e=>a.createElement(a.Suspense,{fallback:a.createElement("div",null,"Loading...")},a.createElement(f,(0,n.Z)({},e,{assignments:c.assignments,loadAssignments:b,students:c.students,studentAverages:c.studentAverages,classAverage:c.classAverage,classId:u,title:s})))}),a.createElement(l.AW,{path:"/".concat(u,"/:studentId"),render:e=>a.createElement(a.Suspense,{fallback:a.createElement("div",null,"Loading...")},a.createElement(E,(0,n.Z)({},e,{students:c.students,classId:u,title:s,loadAssignments:b,studentAverage:c.studentAverages[e.match.params.studentId],assignments:c.assignments.filter((t=>t.student_id==e.match.params.studentId))})))}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,