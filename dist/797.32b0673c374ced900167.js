"use strict";(self.webpackChunkclass_manager=self.webpackChunkclass_manager||[]).push([[797],{797:(e,t,a)=>{a.r(t),a.d(t,{default:()=>r});var l=a(466),c=a(429),s=a(374);const n=(0,l.lazy)((()=>Promise.resolve().then(a.bind(a,694))));function r({match:e,students:t,averages:a,assignments:r,deleteStudentCallback:o,toggleModal:m}){return t.map(((t,d)=>{let i,{name:u,id:N}=t,f=isNaN(a[t.id])?"N/A":"".concat(a[t.id],"%"),g=r.filter((e=>e.student_id==N)).sort(((e,t)=>e.id-t.id)),E=l.createElement(n,{subject:"student",deleteSubject:()=>s.Z.student.delete(N).then((()=>o(N))).catch((e=>console.error(e))),goBack:()=>m()});if(g.length>1){let e=g.pop(),t=e.score/e.totalpoints*100,a=0,c=0;g.forEach((e=>(isNaN(e.score)||(a+=parseInt(e.score)),c+=parseInt(e.totalpoints),!1)));let s=0!==c?(a/c*100).toFixed(2):"N/A";t<s?i=l.createElement("i",{className:"fa fa-arrow-down",style:{color:"red"},"aria-hidden":"true"}):t>s&&(i=l.createElement("i",{className:"fa fa-arrow-up",style:{color:"green"},"aria-hidden":"true"}))}let p=g.length?l.createElement(c.rU,{to:e.url+"/".concat(N)},l.createElement("i",{className:"fa fa-list-ul fa-lg clickable","aria-hidden":"true","data-toggle":"tooltip","data-placement":"bottom",title:"List Assignments"})):null;return l.createElement("tr",{className:"d-flex",key:d},l.createElement("td",{className:"col-2"}),l.createElement("td",{className:"col-2"},u),l.createElement("td",{className:"col-2"}),l.createElement("td",{className:"col-1"},f,i),l.createElement("td",{className:"col-2"}),l.createElement("td",{className:"col-1"},p),l.createElement("td",{className:"col-1"},l.createElement("i",{style:{color:"crimson"},className:"fa fa-times fa-lg clickable",onClick:()=>m(E),"data-toggle":"tooltip","data-placement":"bottom",title:"Delete Student"})),l.createElement("td",{className:"col-1"}))}))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNzk3LmRmYTk5OTRjYTRkZGYzMTAyOWQxLmpzIiwibWFwcGluZ3MiOiJ5S0FHQSxNQUFNQSxHQUFRQyxFQUFBQSxFQUFBQSxPQUFLLElBQU0sd0NBRVYsWUFBUyxNQUFDQyxFQUFELFNBQVFDLEVBQVIsU0FBa0JDLEVBQWxCLFlBQTRCQyxFQUE1QixzQkFBeUNDLEVBQXpDLFlBQWdFQyxJQUVwRixPQUNJSixFQUFTSyxLQUFJLENBQUNDLEVBQVNDLEtBQ25CLElBT0lDLEdBUEEsS0FBRUMsRUFBRixHQUFRQyxHQUFPSixFQUlmSyxFQUFXQyxNQUFNWCxFQUFTSyxFQUFRSSxLQUFxQyxNQUE3RCxVQUFtQ1QsRUFBU0ssRUFBUUksSUFBcEQsS0FDVkcsRUFBcUJYLEVBQVlZLFFBQU9DLEdBQWNBLEVBQVdDLFlBQWNOLElBQUlPLE1BQUssQ0FBQ0MsRUFBRUMsSUFBTUQsRUFBRVIsR0FBS1MsRUFBRVQsS0FDMUdVLEVBQVEsZ0JBQUN2QixFQUFELENBQU93QixRQUFTLFVBQVdDLGNBTG5CLElBQU1DLEVBQUFBLEVBQUFBLFFBQUFBLE9BQTBCYixHQUMvQmMsTUFBSyxJQUFNckIsRUFBc0JPLEtBQ2pDZSxPQUFPQyxHQUFTQyxRQUFRRCxNQUFNQSxLQUdrQkUsT0FBUSxJQUFNeEIsTUFJbkYsR0FBSVMsRUFBbUJnQixPQUFTLEVBQ2hDLENBQ0ksSUFBSUMsRUFBbUJqQixFQUFtQmtCLE1BQ3RDQyxFQUE4QkYsRUFBaUJHLE1BQVFILEVBQWlCSSxZQUFlLElBRXZGQyxFQUFvQixFQUNwQkMsRUFBc0IsRUFFMUJ2QixFQUFtQndCLFNBQVN0QixJQUNuQkgsTUFBTUcsRUFBV2tCLFNBQVFFLEdBQXFCRyxTQUFTdkIsRUFBV2tCLFFBQ3ZFRyxHQUF1QkUsU0FBU3ZCLEVBQVdtQixjQUNwQyxLQUdYLElBQUlLLEVBQTBDLElBQXhCSCxHQUE2QkQsRUFBb0JDLEVBQXNCLEtBQUtJLFFBQVEsR0FBSyxNQUUzR1IsRUFBNkJPLEVBQzdCL0IsRUFBYSxxQkFBR2lDLFVBQVUsbUJBQW1CQyxNQUFPLENBQUNDLE1BQU8sT0FBUSxjQUFZLFNBQzNFWCxFQUE2Qk8sSUFDbEMvQixFQUFhLHFCQUFHaUMsVUFBVSxpQkFBaUJDLE1BQU8sQ0FBQ0MsTUFBTyxTQUFVLGNBQVksVUFHeEYsSUFBSUMsRUFBa0IvQixFQUFtQmdCLE9BQ3JDLGdCQUFDLEtBQUQsQ0FBTWdCLEdBQUk5QyxFQUFNK0MsSUFBTixXQUFnQnBDLElBQU0scUJBQUcrQixVQUFVLGdDQUFnQyxjQUFZLE9BQU8sY0FBWSxVQUFVLGlCQUFlLFNBQVNNLE1BQU0sc0JBQ3BKLEtBRUosT0FDSSxzQkFBSU4sVUFBVSxTQUFTTyxJQUFLekMsR0FDeEIsc0JBQUlrQyxVQUFVLFVBQ2Qsc0JBQUlBLFVBQVUsU0FBU2hDLEdBQ3ZCLHNCQUFJZ0MsVUFBVSxVQUNkLHNCQUFJQSxVQUFVLFNBQVM5QixFQUFTSCxHQUNoQyxzQkFBSWlDLFVBQVUsVUFDZCxzQkFBSUEsVUFBVSxTQUFTRyxHQUN2QixzQkFBSUgsVUFBVSxTQUFRLHFCQUFHQyxNQUFPLENBQUNDLE1BQU8sV0FBWUYsVUFBVSw4QkFBOEJRLFFBQVMsSUFBTTdDLEVBQVlnQixHQUFRLGNBQVksVUFBVSxpQkFBZSxTQUFTMkIsTUFBTSxvQkFDbkwsc0JBQUlOLFVBQVUiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy1tYW5hZ2VyLy4vc3JjL3ZpZXdzL2NsYXNzL3N0dWRlbnRzL3Jvd3MuanN4Il0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyBsYXp5IH0gZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uLy4uL2NvbnRyb2xsZXIuanNcIlxuY29uc3QgTW9kYWwgPSBsYXp5KCgpID0+IGltcG9ydChcIi4uLy4uLy4uL2NvbXBvbmVudHMvTW9kYWwuanN4XCIpKVxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7bWF0Y2gsIHN0dWRlbnRzLCBhdmVyYWdlcywgYXNzaWdubWVudHMsIGRlbGV0ZVN0dWRlbnRDYWxsYmFjaywgdG9nZ2xlTW9kYWx9KVxue1xuICAgIHJldHVybiAoXG4gICAgICAgIHN0dWRlbnRzLm1hcCgoc3R1ZGVudCwgaW5kZXgpID0+IHtcbiAgICAgICAgICAgIGxldCB7IG5hbWUsIGlkIH0gPSBzdHVkZW50XG4gICAgICAgICAgICBsZXQgZGVsZXRlU3R1ZGVudCA9ICgpID0+IGNvbnRyb2xsZXIuc3R1ZGVudC5kZWxldGUoaWQpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC50aGVuKCgpID0+IGRlbGV0ZVN0dWRlbnRDYWxsYmFjayhpZCkpXG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC5jYXRjaCgoZXJyb3IgPT4gY29uc29sZS5lcnJvcihlcnJvcikpKVxuICAgICAgICAgICAgbGV0IGF2ZXJhZ2UgPSAhaXNOYU4oYXZlcmFnZXNbc3R1ZGVudC5pZF0pID8gIGAke2F2ZXJhZ2VzW3N0dWRlbnQuaWRdfSVgIDogXCJOL0FcIlxuICAgICAgICAgICAgbGV0IHN0dWRlbnRBc3NpZ25tZW50cyA9IGFzc2lnbm1lbnRzLmZpbHRlcihhc3NpZ25tZW50ID0+IGFzc2lnbm1lbnQuc3R1ZGVudF9pZCA9PSBpZCkuc29ydCgoYSxiKSA9PiBhLmlkIC0gYi5pZClcbiAgICAgICAgICAgIGxldCBtb2RhbCA9IDxNb2RhbCBzdWJqZWN0PXsnc3R1ZGVudCd9IGRlbGV0ZVN1YmplY3Q9e2RlbGV0ZVN0dWRlbnR9IGdvQmFjaz17KCkgPT4gdG9nZ2xlTW9kYWwoKX0vPlxuICAgICAgICAgICAgbGV0IHRyZW5kQXJyb3dcblxuICAgICAgICAgICAgXG4gICAgICAgICAgICBpZiAoc3R1ZGVudEFzc2lnbm1lbnRzLmxlbmd0aCA+IDEpXG4gICAgICAgICAgICB7XG4gICAgICAgICAgICAgICAgbGV0IGxhdGVzdEFzc2lnbm1lbnQgPSBzdHVkZW50QXNzaWdubWVudHMucG9wKClcbiAgICAgICAgICAgICAgICBsZXQgbGF0ZXN0QXNzaWdubWVudFBlcmNlbnRhZ2UgPSAobGF0ZXN0QXNzaWdubWVudC5zY29yZSAvIGxhdGVzdEFzc2lnbm1lbnQudG90YWxwb2ludHMpICogMTAwXG5cbiAgICAgICAgICAgICAgICBsZXQgdG90YWxQb2ludHNTY29yZWQgPSAwXG4gICAgICAgICAgICAgICAgbGV0IHRvdGFsUG9pbnRzUG9zc2libGUgPSAwXG4gICAgICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgc3R1ZGVudEFzc2lnbm1lbnRzLmZvckVhY2goKGFzc2lnbm1lbnQpID0+IHtcbiAgICAgICAgICAgICAgICAgICAgaWYgKCFpc05hTihhc3NpZ25tZW50LnNjb3JlKSkgdG90YWxQb2ludHNTY29yZWQgKz0gcGFyc2VJbnQoYXNzaWdubWVudC5zY29yZSlcbiAgICAgICAgICAgICAgICAgICAgdG90YWxQb2ludHNQb3NzaWJsZSArPSBwYXJzZUludChhc3NpZ25tZW50LnRvdGFscG9pbnRzKVxuICAgICAgICAgICAgICAgICAgICByZXR1cm4gZmFsc2VcbiAgICAgICAgICAgICAgICB9KVxuICAgICAgICAgICAgXG4gICAgICAgICAgICAgICAgbGV0IHByZXZpb3VzQXZlcmFnZSA9IHRvdGFsUG9pbnRzUG9zc2libGUgIT09IDAgPyAodG90YWxQb2ludHNTY29yZWQgLyB0b3RhbFBvaW50c1Bvc3NpYmxlICogMTAwKS50b0ZpeGVkKDIpIDogJ04vQScgXG4gICAgICAgICAgICBcbiAgICAgICAgICAgICAgICBpZiAobGF0ZXN0QXNzaWdubWVudFBlcmNlbnRhZ2UgPCBwcmV2aW91c0F2ZXJhZ2UpXG4gICAgICAgICAgICAgICAgICAgIHRyZW5kQXJyb3cgPSA8aSBjbGFzc05hbWU9XCJmYSBmYS1hcnJvdy1kb3duXCIgc3R5bGU9e3tjb2xvcjogJ3JlZCd9fSBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+XG4gICAgICAgICAgICAgICAgZWxzZSBpZiAobGF0ZXN0QXNzaWdubWVudFBlcmNlbnRhZ2UgPiBwcmV2aW91c0F2ZXJhZ2UpXG4gICAgICAgICAgICAgICAgICAgIHRyZW5kQXJyb3cgPSA8aSBjbGFzc05hbWU9XCJmYSBmYS1hcnJvdy11cFwiIHN0eWxlPXt7Y29sb3I6ICdncmVlbid9fSBhcmlhLWhpZGRlbj1cInRydWVcIj48L2k+XG4gICAgICAgICAgICB9XG4gICAgICAgICAgICBcbiAgICAgICAgICAgIGxldCBhc3NpZ25tZW50c0xpbmsgPSBzdHVkZW50QXNzaWdubWVudHMubGVuZ3RoID8gXG4gICAgICAgICAgICAgICAgPExpbmsgdG89e21hdGNoLnVybCArIGAvJHtpZH1gfT48aSBjbGFzc05hbWU9XCJmYSBmYS1saXN0LXVsIGZhLWxnIGNsaWNrYWJsZVwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiIGRhdGEtdG9nZ2xlPVwidG9vbHRpcFwiIGRhdGEtcGxhY2VtZW50PVwiYm90dG9tXCIgdGl0bGU9XCJMaXN0IEFzc2lnbm1lbnRzXCI+PC9pPjwvTGluaz4gOlxuICAgICAgICAgICAgICAgIG51bGxcbiAgICAgICAgICAgIFxuICAgICAgICAgICAgcmV0dXJuIChcbiAgICAgICAgICAgICAgICA8dHIgY2xhc3NOYW1lPVwiZC1mbGV4XCIga2V5PXtpbmRleH0+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjb2wtMlwiLz5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNvbC0yXCI+e25hbWV9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNvbC0yXCIvPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiY29sLTFcIj57YXZlcmFnZX17dHJlbmRBcnJvd308L3RkPlxuICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiY29sLTJcIi8+XG4gICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjb2wtMVwiPnthc3NpZ25tZW50c0xpbmt9PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNvbC0xXCI+PGkgc3R5bGU9e3tjb2xvcjogJ2NyaW1zb24nfX0gY2xhc3NOYW1lPVwiZmEgZmEtdGltZXMgZmEtbGcgY2xpY2thYmxlXCIgb25DbGljaz17KCkgPT4gdG9nZ2xlTW9kYWwobW9kYWwpfSBkYXRhLXRvZ2dsZT1cInRvb2x0aXBcIiBkYXRhLXBsYWNlbWVudD1cImJvdHRvbVwiIHRpdGxlPVwiRGVsZXRlIFN0dWRlbnRcIj48L2k+PC90ZD5cbiAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNvbC0xXCIvPlxuICAgICAgICAgICAgICAgIDwvdHI+XG4gICAgICAgICAgICApXG4gICAgICAgIH0pXG4gICAgKVxufSJdLCJuYW1lcyI6WyJNb2RhbCIsImxhenkiLCJtYXRjaCIsInN0dWRlbnRzIiwiYXZlcmFnZXMiLCJhc3NpZ25tZW50cyIsImRlbGV0ZVN0dWRlbnRDYWxsYmFjayIsInRvZ2dsZU1vZGFsIiwibWFwIiwic3R1ZGVudCIsImluZGV4IiwidHJlbmRBcnJvdyIsIm5hbWUiLCJpZCIsImF2ZXJhZ2UiLCJpc05hTiIsInN0dWRlbnRBc3NpZ25tZW50cyIsImZpbHRlciIsImFzc2lnbm1lbnQiLCJzdHVkZW50X2lkIiwic29ydCIsImEiLCJiIiwibW9kYWwiLCJzdWJqZWN0IiwiZGVsZXRlU3ViamVjdCIsImNvbnRyb2xsZXIiLCJ0aGVuIiwiY2F0Y2giLCJlcnJvciIsImNvbnNvbGUiLCJnb0JhY2siLCJsZW5ndGgiLCJsYXRlc3RBc3NpZ25tZW50IiwicG9wIiwibGF0ZXN0QXNzaWdubWVudFBlcmNlbnRhZ2UiLCJzY29yZSIsInRvdGFscG9pbnRzIiwidG90YWxQb2ludHNTY29yZWQiLCJ0b3RhbFBvaW50c1Bvc3NpYmxlIiwiZm9yRWFjaCIsInBhcnNlSW50IiwicHJldmlvdXNBdmVyYWdlIiwidG9GaXhlZCIsImNsYXNzTmFtZSIsInN0eWxlIiwiY29sb3IiLCJhc3NpZ25tZW50c0xpbmsiLCJ0byIsInVybCIsInRpdGxlIiwia2V5Iiwib25DbGljayJdLCJzb3VyY2VSb290IjoiIn0=