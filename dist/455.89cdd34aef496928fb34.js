"use strict";(self.webpackChunkclass_manager=self.webpackChunkclass_manager||[]).push([[455],{479:(e,t,a)=>{a.d(t,{Z:()=>s});var n=a(466),l=a(429);function s({url:e,text:t}){return n.createElement("div",{style:{padding:"1em 0 0 2em"}},n.createElement(l.rU,{to:e,style:{textDecoration:"none",color:"grey",fontWeight:"bolder"}},n.createElement("i",{className:"fa fa-chevron-left","aria-hidden":"true"}),"   ",t))}},455:(e,t,a)=>{a.r(t),a.d(t,{default:()=>o});var n=a(466),l=a(374),s=a(479);const c=(0,n.lazy)((()=>a.e(834).then(a.bind(a,834)))),r=(0,n.lazy)((()=>a.e(850).then(a.bind(a,850)))),m=/[\dM]/;function o(e){var t;let{classId:a,assignments:o,studentAverage:d,students:i,loadAssignments:u}=e,E=null===(t=i.find((t=>t.id==e.match.params.studentId)))||void 0===t?void 0:t.name;if(void 0===E)return n.createElement(r,null);const[f,h]=(0,n.useState)({mounted:!1,scores:{}});return(0,n.useEffect)((()=>{if(f.mounted)return;let e={};o.map((t=>{e[t.id]=t.score})),h({...f,mounted:!0,scores:e})}),[f.mounted]),n.createElement(n.Fragment,null,n.createElement("header",{className:"container-fluid"},n.createElement(s.Z,{url:"/"+a,text:"Student"}),n.createElement("h1",{className:"text-center",style:{fontSize:"3rem",fontWeight:"bolder"}},E),n.createElement("h2",{className:"text-center",style:{fontSize:"2rem",color:"#777"}},d,"%")),n.createElement("div",{className:"container-fluid"},n.createElement("table",{className:"table table-hover"},n.createElement("thead",null,n.createElement("tr",{className:"d-flex"},n.createElement("th",{className:"col-3"}),n.createElement("th",{className:"col-2"},"Title"),n.createElement("th",{className:"col-2"}),n.createElement("th",{className:"col-2"},"Score"),n.createElement("th",{className:"col-3"}))),n.createElement("tbody",null,n.createElement(n.Suspense,{fallback:n.createElement("tr",{className:"d-flex"},n.createElement("td",{className:"col-3"}),n.createElement("td",{className:"col-2"},"Loading..."))},n.createElement(c,{assignments:o,scores:f.scores,handleScoreChange:function(e,t){if(!m.test(t)&&""!==t)return;isNaN(parseInt(t))||(t=parseInt(t));let a=f.scores;a[e]=t,h({...f,scores:a})}}))))),n.createElement("div",{className:"text-center"},n.createElement("button",{className:"btn btn-primary",onClick:function(){const e=f.scores;"{}"!==JSON.stringify(e)&&l.Z.assignment.update(e).then(u).catch((e=>console.error(e)))}},"Update Scores")))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiNDU1LjlkNTNlNjk0YTliMjZhOTZkZjVmLmpzIiwibWFwcGluZ3MiOiJtSkFHZSxZQUFTLElBQUNBLEVBQUQsS0FBTUMsSUFFMUIsT0FDSSx1QkFBS0MsTUFBTyxDQUFDQyxRQUFTLGdCQUNsQixnQkFBQyxLQUFELENBQU1DLEdBQUlKLEVBQUtFLE1BQU8sQ0FBQ0csZUFBZ0IsT0FBUUMsTUFBTyxPQUFRQyxXQUFZLFdBQ3RFLHFCQUFHQyxVQUFVLHFCQUFxQixjQUFZLFNBRGxELE1BRXVCUCxNLDJFQ05uQyxNQUFNUSxHQUFPQyxFQUFBQSxFQUFBQSxPQUFLLElBQU0sK0JBQ2xCQyxHQUFXRCxFQUFBQSxFQUFBQSxPQUFLLElBQU0sK0JBRXRCRSxFQUFpQixRQUVSLFdBQVNDLEdBQ3hCLE1BQ0UsSUFBSSxRQUFFQyxFQUFGLFlBQVdDLEVBQVgsZUFBd0JDLEVBQXhCLFNBQXdDQyxFQUF4QyxnQkFBa0RDLEdBQW9CTCxFQUN0RU0sRUFBSSxVQUFHRixFQUFTRyxNQUFLQyxHQUFXQSxFQUFRQyxJQUFNVCxFQUFNVSxNQUFNQyxPQUFPQyxtQkFBN0QsYUFBRyxFQUFzRU4sS0FDakYsUUFBYU8sSUFBVFAsRUFBb0IsT0FBTyxnQkFBQ1IsRUFBRCxNQUUvQixNQUFPZ0IsRUFBT0MsSUFBWUMsRUFBQUEsRUFBQUEsVUFBUyxDQUNqQ0MsU0FBUyxFQUNUQyxPQUFRLEtBa0NWLE9BL0JBQyxFQUFBQSxFQUFBQSxZQUFXLEtBQ1QsR0FBSUwsRUFBTUcsUUFBUyxPQUVuQixJQUFJQyxFQUFTLEdBQ2JoQixFQUFZa0IsS0FBSUMsSUFDZEgsRUFBT0csRUFBV1osSUFBTVksRUFBV0MsU0FFckNQLEVBQVMsSUFBSUQsRUFBT0csU0FBUyxFQUFNQyxPQUFBQSxNQUNsQyxDQUFDSixFQUFNRyxVQXdCUixnQ0FDRSwwQkFBUXRCLFVBQVUsbUJBQ2hCLGdCQUFDLElBQUQsQ0FBUVIsSUFBSyxJQUFNYyxFQUFTYixLQUFNLFlBQ2xDLHNCQUFJTyxVQUFVLGNBQWNOLE1BQU8sQ0FBQ2tDLFNBQVUsT0FBTzdCLFdBQVksV0FBWVksR0FDN0Usc0JBQUlYLFVBQVUsY0FBY04sTUFBTyxDQUFDa0MsU0FBVSxPQUFROUIsTUFBTyxTQUFVVSxFQUF2RSxNQUVGLHVCQUFLUixVQUFVLG1CQUNiLHlCQUFPQSxVQUFVLHFCQUNmLDZCQUNFLHNCQUFJQSxVQUFVLFVBQ1osc0JBQUlBLFVBQVUsVUFDZCxzQkFBSUEsVUFBVSxTQUFkLFNBQ0Esc0JBQUlBLFVBQVUsVUFDZCxzQkFBSUEsVUFBVSxTQUFkLFNBQ0Esc0JBQUlBLFVBQVUsWUFHbEIsNkJBQ0UsZ0JBQUMsRUFBQTZCLFNBQUQsQ0FBVUMsU0FBVSxzQkFBSTlCLFVBQVUsVUFDWixzQkFBSUEsVUFBVSxVQUNkLHNCQUFJQSxVQUFVLFNBQWQsZ0JBRXBCLGdCQUFDQyxFQUFELENBQU1NLFlBQWFBLEVBQWFnQixPQUFRSixFQUFNSSxPQUFRUSxrQkEzQ2xFLFNBQTJCakIsRUFBSWEsR0FDN0IsSUFBSXZCLEVBQWU0QixLQUFLTCxJQUFvQixLQUFWQSxFQUFjLE9BRTNDTSxNQUFNQyxTQUFTUCxNQUFTQSxFQUFRTyxTQUFTUCxJQUU5QyxJQUFJSixFQUFTSixFQUFNSSxPQUNuQkEsRUFBT1QsR0FBTWEsRUFDYlAsRUFBUyxJQUFLRCxFQUFPSSxPQUFBQSxXQXlDbkIsdUJBQUt2QixVQUFVLGVBQ2IsMEJBQVFBLFVBQVUsa0JBQWtCbUMsUUF2QzFDLFdBRUUsTUFBTVosRUFBU0osRUFBTUksT0FDVSxPQUEzQmEsS0FBS0MsVUFBVWQsSUFDakJlLEVBQUFBLEVBQUFBLFdBQUFBLE9BQTZCZixHQUM1QmdCLEtBQU03QixHQUNOOEIsT0FBT0MsR0FBVUMsUUFBUUQsTUFBTUEsT0FpQzlCIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vY2xhc3MtbWFuYWdlci8uL3NyYy9jb21wb25lbnRzL0JhY2suanN4Iiwid2VicGFjazovL2NsYXNzLW1hbmFnZXIvLi9zcmMvdmlld3Mvc3R1ZGVudC9pbmRleC5qc3giXSwic291cmNlc0NvbnRlbnQiOlsiaW1wb3J0IFJlYWN0IGZyb20gJ3JlYWN0J1xuaW1wb3J0IHsgTGluayB9IGZyb20gXCJyZWFjdC1yb3V0ZXItZG9tXCJcblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24oe3VybCwgdGV4dH0pXG57XG4gICAgcmV0dXJuIChcbiAgICAgICAgPGRpdiBzdHlsZT17e3BhZGRpbmc6ICcxZW0gMCAwIDJlbSd9fT5cbiAgICAgICAgICAgIDxMaW5rIHRvPXt1cmx9IHN0eWxlPXt7dGV4dERlY29yYXRpb246ICdub25lJywgY29sb3I6ICdncmV5JywgZm9udFdlaWdodDogJ2JvbGRlcid9fT5cbiAgICAgICAgICAgICAgICA8aSBjbGFzc05hbWU9XCJmYSBmYS1jaGV2cm9uLWxlZnRcIiBhcmlhLWhpZGRlbj1cInRydWVcIi8+XG4gICAgICAgICAgICAgICAgJm5ic3A7Jm5ic3A7Jm5ic3A7e3RleHR9XG4gICAgICAgICAgICA8L0xpbms+XG4gICAgICAgIDwvZGl2PlxuICAgIClcbn0iLCJpbXBvcnQgUmVhY3QsIHsgbGF6eSwgdXNlU3RhdGUsIHVzZUVmZmVjdCwgU3VzcGVuc2UgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIuanNcIlxuaW1wb3J0IEdvQmFjayBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9CYWNrLmpzeFwiXG5jb25zdCBSb3dzID0gbGF6eSgoKSA9PiBpbXBvcnQoXCIuL3Jvd3MuanN4XCIpKVxuY29uc3QgTm90Rm91bmQgPSBsYXp5KCgpID0+IGltcG9ydChcIi4uLzQwNC9pbmRleC5qc3hcIikpXG5cbmNvbnN0IGRpZ2l0c09yTVJlZ2V4ID0gL1tcXGRNXS9cblxuZXhwb3J0IGRlZmF1bHQgZnVuY3Rpb24ocHJvcHMpXG57XG4gIGxldCB7IGNsYXNzSWQsIGFzc2lnbm1lbnRzLCBzdHVkZW50QXZlcmFnZSwgc3R1ZGVudHMsIGxvYWRBc3NpZ25tZW50cyB9ID0gcHJvcHNcbiAgbGV0IG5hbWUgPSBzdHVkZW50cy5maW5kKHN0dWRlbnQgPT4gc3R1ZGVudC5pZCA9PSBwcm9wcy5tYXRjaC5wYXJhbXMuc3R1ZGVudElkKT8ubmFtZVxuICBpZiAobmFtZSA9PT0gdW5kZWZpbmVkKSByZXR1cm4gPE5vdEZvdW5kLz5cbiAgXG4gIGNvbnN0IFtzdGF0ZSwgc2V0U3RhdGVdID0gdXNlU3RhdGUoe1xuICAgIG1vdW50ZWQ6IGZhbHNlLFxuICAgIHNjb3Jlczoge31cbiAgfSlcblxuICB1c2VFZmZlY3QoICgpID0+IHtcbiAgICBpZiAoc3RhdGUubW91bnRlZCkgcmV0dXJuXG5cbiAgICBsZXQgc2NvcmVzID0ge31cbiAgICBhc3NpZ25tZW50cy5tYXAoYXNzaWdubWVudCA9PiB7XG4gICAgICBzY29yZXNbYXNzaWdubWVudC5pZF0gPSBhc3NpZ25tZW50LnNjb3JlXG4gICAgfSlcbiAgICBzZXRTdGF0ZSh7Li4uc3RhdGUsIG1vdW50ZWQ6IHRydWUsIHNjb3Jlc30pXG4gIH0sIFtzdGF0ZS5tb3VudGVkXSlcblxuXG4gIGZ1bmN0aW9uIGhhbmRsZVNjb3JlQ2hhbmdlKGlkLCBzY29yZSkgeyAgXG4gICAgaWYoIWRpZ2l0c09yTVJlZ2V4LnRlc3Qoc2NvcmUpICYmIHNjb3JlICE9PSAnJykgcmV0dXJuXG4gICAgXG4gICAgaWYgKCFpc05hTihwYXJzZUludChzY29yZSkpKSBzY29yZSA9IHBhcnNlSW50KHNjb3JlKVxuICAgIFxuICAgIGxldCBzY29yZXMgPSBzdGF0ZS5zY29yZXNcbiAgICBzY29yZXNbaWRdID0gc2NvcmVcbiAgICBzZXRTdGF0ZSh7IC4uLnN0YXRlLCBzY29yZXMgfSlcbiAgfVxuXG4gIGZ1bmN0aW9uIHVwZGF0ZVNjb3JlcygpXG4gIHtcbiAgICBjb25zdCBzY29yZXMgPSBzdGF0ZS5zY29yZXNcbiAgICBpZiAoSlNPTi5zdHJpbmdpZnkoc2NvcmVzKSAhPT0gJ3t9Jykge1xuICAgICAgY29udHJvbGxlci5hc3NpZ25tZW50LnVwZGF0ZShzY29yZXMpXG4gICAgICAudGhlbiggbG9hZEFzc2lnbm1lbnRzIClcbiAgICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKVxuICAgIH1cbiAgfVxuXG4gIHJldHVybiAoXG4gICAgPD5cbiAgICAgIDxoZWFkZXIgY2xhc3NOYW1lPVwiY29udGFpbmVyLWZsdWlkXCI+XG4gICAgICAgIDxHb0JhY2sgdXJsPXsnLycgKyBjbGFzc0lkfSB0ZXh0PXtcIlN0dWRlbnRcIn0vPlxuICAgICAgICA8aDEgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIiBzdHlsZT17e2ZvbnRTaXplOiAnM3JlbScsZm9udFdlaWdodDogJ2JvbGRlcid9fT57bmFtZX08L2gxPlxuICAgICAgICA8aDIgY2xhc3NOYW1lPVwidGV4dC1jZW50ZXJcIiBzdHlsZT17e2ZvbnRTaXplOiAnMnJlbScsIGNvbG9yOiAnIzc3Nyd9fT57c3R1ZGVudEF2ZXJhZ2V9JTwvaDI+XG4gICAgICA8L2hlYWRlcj5cbiAgICAgIDxkaXYgY2xhc3NOYW1lPVwiY29udGFpbmVyLWZsdWlkXCI+XG4gICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1ob3ZlclwiPlxuICAgICAgICAgIDx0aGVhZD5cbiAgICAgICAgICAgIDx0ciBjbGFzc05hbWU9XCJkLWZsZXhcIj5cbiAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC0zXCIvPlxuICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiY29sLTJcIj5UaXRsZTwvdGg+XG4gICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJjb2wtMlwiLz5cbiAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC0yXCI+U2NvcmU8L3RoPlxuICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiY29sLTNcIi8+XG4gICAgICAgICAgICA8L3RyPlxuICAgICAgICAgIDwvdGhlYWQ+XG4gICAgICAgICAgPHRib2R5PlxuICAgICAgICAgICAgPFN1c3BlbnNlIGZhbGxiYWNrPXs8dHIgY2xhc3NOYW1lPVwiZC1mbGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgPHRkIGNsYXNzTmFtZT1cImNvbC0zXCIvPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDx0ZCBjbGFzc05hbWU9XCJjb2wtMlwiPkxvYWRpbmcuLi48L3RkPlxuICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPn0+XG4gICAgICAgICAgICAgIDxSb3dzIGFzc2lnbm1lbnRzPXthc3NpZ25tZW50c30gc2NvcmVzPXtzdGF0ZS5zY29yZXN9IGhhbmRsZVNjb3JlQ2hhbmdlPXtoYW5kbGVTY29yZUNoYW5nZX0vPlxuICAgICAgICAgICAgPC9TdXNwZW5zZT5cbiAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICA8L3RhYmxlPlxuICAgICAgPC9kaXY+XG4gICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgIDxidXR0b24gY2xhc3NOYW1lPVwiYnRuIGJ0bi1wcmltYXJ5XCIgb25DbGljaz17dXBkYXRlU2NvcmVzfT5VcGRhdGUgU2NvcmVzPC9idXR0b24+XG4gICAgICA8L2Rpdj5cbiAgICA8Lz5cbiAgKVxufSJdLCJuYW1lcyI6WyJ1cmwiLCJ0ZXh0Iiwic3R5bGUiLCJwYWRkaW5nIiwidG8iLCJ0ZXh0RGVjb3JhdGlvbiIsImNvbG9yIiwiZm9udFdlaWdodCIsImNsYXNzTmFtZSIsIlJvd3MiLCJsYXp5IiwiTm90Rm91bmQiLCJkaWdpdHNPck1SZWdleCIsInByb3BzIiwiY2xhc3NJZCIsImFzc2lnbm1lbnRzIiwic3R1ZGVudEF2ZXJhZ2UiLCJzdHVkZW50cyIsImxvYWRBc3NpZ25tZW50cyIsIm5hbWUiLCJmaW5kIiwic3R1ZGVudCIsImlkIiwibWF0Y2giLCJwYXJhbXMiLCJzdHVkZW50SWQiLCJ1bmRlZmluZWQiLCJzdGF0ZSIsInNldFN0YXRlIiwidXNlU3RhdGUiLCJtb3VudGVkIiwic2NvcmVzIiwidXNlRWZmZWN0IiwibWFwIiwiYXNzaWdubWVudCIsInNjb3JlIiwiZm9udFNpemUiLCJTdXNwZW5zZSIsImZhbGxiYWNrIiwiaGFuZGxlU2NvcmVDaGFuZ2UiLCJ0ZXN0IiwiaXNOYU4iLCJwYXJzZUludCIsIm9uQ2xpY2siLCJKU09OIiwic3RyaW5naWZ5IiwiY29udHJvbGxlciIsInRoZW4iLCJjYXRjaCIsImVycm9yIiwiY29uc29sZSJdLCJzb3VyY2VSb290IjoiIn0=