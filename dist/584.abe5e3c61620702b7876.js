"use strict";(self.webpackChunkclass_manager=self.webpackChunkclass_manager||[]).push([[584],{479:(e,t,a)=>{a.d(t,{Z:()=>l});var n=a(466),r=a(429);function l({url:e,text:t}){return n.createElement("div",{style:{padding:"1em 0 0 2em"}},n.createElement(r.rU,{to:e,style:{textDecoration:"none",color:"grey",fontWeight:"bolder"}},n.createElement("i",{className:"fa fa-chevron-left","aria-hidden":"true"}),"   ",t))}},584:(e,t,a)=>{a.r(t),a.d(t,{default:()=>i});var n=a(466),r=a(374),l=a(479);const s=(0,n.lazy)((()=>a.e(886).then(a.bind(a,886)))),c=/[\dM{1}]/;function i(e){let{title:t,classId:a,students:i,classAverage:o,assignments:m,loadAssignments:d}=e;const u={assignmentTitle:"",maxPoints:1,scores:{},error:!1},[f,g]=(0,n.useState)({...u});return n.createElement(n.Fragment,null,n.createElement("header",{className:"container-fluid"},n.createElement(l.Z,{url:"/"+a,text:"New Assignment"}),n.createElement("h2",{style:{color:"#777"},className:"text-center"},t),n.createElement("h1",{className:"text-center",style:{boxSizing:"border-box",padding:".375rem .75rem",fontSize:"3rem",fontWeight:"bolder"}},o)),n.createElement("div",null,n.createElement("div",{className:"container-fluid"},n.createElement("div",{className:"text-center"},n.createElement("div",{style:{display:"inline-block"}},n.createElement("input",{type:"text",autoFocus:!0,className:!f.assignmentTitle&&f.error?"error":void 0,value:f.assignmentTitle,placeholder:"Assignment Title",onChange:({currentTarget:e})=>{return t=e.value,void g({...f,assignmentTitle:t});var t}}),"out of ",n.createElement("input",{id:"maxPointsInput",type:"number",min:"1",max:"999",value:f.maxPoints,onChange:({currentTarget:e})=>function(e){if(isNaN(e)||e>999)return!1;g({...f,maxPoints:e})}(parseInt(e.value))})," points")),n.createElement("table",{className:"table table-hover table-striped"},n.createElement("thead",null,n.createElement("tr",{className:"d-flex"},n.createElement("th",{className:"col-3"}),n.createElement("th",{className:"col-2"},"Name"),n.createElement("th",{className:"col-2"}),n.createElement("th",{className:"col-2"},"Points"),n.createElement("th",{className:"col-3"}))),n.createElement("tbody",null,n.createElement(n.Suspense,{fallback:n.createElement("tr",{className:"d-flex"},n.createElement("td",{className:"col-3"}),n.createElement("td",{className:"col-2"},"Loading..."))},n.createElement(s,{data:i,scores:f.scores,max:f.maxPoints,handleScoreInput:function(e,t){if(!c.test(t)&&""!==t||parseInt(t)>999)return!1;if(isNaN(parseInt(t))){if(t.length>1)return!1}else t=parseInt(t);let a={...f.scores};a[e]=t,g({...f,scores:a})},error:f.error})))),n.createElement("div",{className:"text-center"},n.createElement("button",{className:"btn btn-success",onClick:function(e){e.preventDefault();let{assignmentTitle:t,maxPoints:n,scores:l}=f,s=!1;l=i.map((e=>{if(!s)return"M"!==l[e.id]&&isNaN(parseInt(l[e.id]))?(g({...f,error:!0}),void(s=!0)):("M"===l[e.id]&&(l[e.id]=0),"user,".concat(t,",").concat(l[e.id],",").concat(n,",").concat(e.id,",").concat(a))})),s||(s=!function(e){let t=!1;if(!f.assignmentTitle.length||!f.maxPoints)return g({...f,error:!0}),t=!0,alert("You need to fill out the highlighted fields"),!1;if(m.find((e=>e.title===f.assignmentTitle)))return alert("An assignment with this title already exists; please choose a different title."),!1;for(var a in e)""===a&&(t=!0);return!!e[e.length-1]&&(e=e.toString(),t?(g({...f,error:!0}),!1):(g({...f,error:!1}),!0))}(t),s||r.Z.assignment.add(l).then((()=>{g({...u}),d()})).catch((e=>console.error(e))))}},"Submit")))))}}}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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RCxPQUFPM0MsR0FBVTRDLFFBQVE1QyxNQUFNQSxRQXdDeEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9jbGFzcy1tYW5hZ2VyLy4vc3JjL2NvbXBvbmVudHMvQmFjay5qc3giLCJ3ZWJwYWNrOi8vY2xhc3MtbWFuYWdlci8uL3NyYy92aWV3cy9hc3NpZ25tZW50L2luZGV4LmpzeCJdLCJzb3VyY2VzQ29udGVudCI6WyJpbXBvcnQgUmVhY3QgZnJvbSAncmVhY3QnXG5pbXBvcnQgeyBMaW5rIH0gZnJvbSBcInJlYWN0LXJvdXRlci1kb21cIlxuXG5leHBvcnQgZGVmYXVsdCBmdW5jdGlvbih7dXJsLCB0ZXh0fSlcbntcbiAgICByZXR1cm4gKFxuICAgICAgICA8ZGl2IHN0eWxlPXt7cGFkZGluZzogJzFlbSAwIDAgMmVtJ319PlxuICAgICAgICAgICAgPExpbmsgdG89e3VybH0gc3R5bGU9e3t0ZXh0RGVjb3JhdGlvbjogJ25vbmUnLCBjb2xvcjogJ2dyZXknLCBmb250V2VpZ2h0OiAnYm9sZGVyJ319PlxuICAgICAgICAgICAgICAgIDxpIGNsYXNzTmFtZT1cImZhIGZhLWNoZXZyb24tbGVmdFwiIGFyaWEtaGlkZGVuPVwidHJ1ZVwiLz5cbiAgICAgICAgICAgICAgICAmbmJzcDsmbmJzcDsmbmJzcDt7dGV4dH1cbiAgICAgICAgICAgIDwvTGluaz5cbiAgICAgICAgPC9kaXY+XG4gICAgKVxufSIsImltcG9ydCBSZWFjdCwgeyBsYXp5LCB1c2VTdGF0ZSwgU3VzcGVuc2UgfSBmcm9tIFwicmVhY3RcIlxuaW1wb3J0IGNvbnRyb2xsZXIgZnJvbSBcIi4uLy4uL2NvbnRyb2xsZXIuanNcIlxuaW1wb3J0IEdvQmFjayBmcm9tIFwiLi4vLi4vY29tcG9uZW50cy9CYWNrLmpzeFwiXG5jb25zdCBSb3dzID0gbGF6eSgoKSA9PiBpbXBvcnQoXCIuL3Jvd3MuanN4XCIpKVxuaW1wb3J0IFwiLi9zdHlsZS5jc3NcIlxuXG5jb25zdCBkaWdpdHNPck1SZWdleCA9IC9bXFxkTXsxfV0vXG5cbmV4cG9ydCBkZWZhdWx0IGZ1bmN0aW9uKHByb3BzKVxue1xuICBsZXQgeyB0aXRsZSwgY2xhc3NJZCwgc3R1ZGVudHMsIGNsYXNzQXZlcmFnZSwgYXNzaWdubWVudHMsIGxvYWRBc3NpZ25tZW50cyB9ID0gcHJvcHNcbiAgY29uc3QgZGVmYXVsdFN0YXRlID0ge1xuICAgIGFzc2lnbm1lbnRUaXRsZTogJycsXG4gICAgbWF4UG9pbnRzOiAxLFxuICAgIHNjb3Jlczoge30sXG4gICAgZXJyb3I6IGZhbHNlXG4gIH1cbiAgY29uc3QgW3N0YXRlLCBzZXRTdGF0ZV0gPSB1c2VTdGF0ZSh7Li4uZGVmYXVsdFN0YXRlfSlcbiAgXG4gIGZ1bmN0aW9uIGhhbmRsZUFzc2lnbm1lbnROYW1lSW5wdXQoYXNzaWdubWVudFRpdGxlKVxuICB7XG4gICAgc2V0U3RhdGUoey4uLnN0YXRlLCBhc3NpZ25tZW50VGl0bGV9KVxuICB9XG4gIFxuICBmdW5jdGlvbiBoYW5kbGVNYXhQb2ludHNJbnB1dChtYXhQb2ludHMpXG4gIHtcbiAgICBpZiAoaXNOYU4obWF4UG9pbnRzKSB8fCBtYXhQb2ludHMgPiA5OTkpIHJldHVybiBmYWxzZVxuICAgIHNldFN0YXRlKHsuLi5zdGF0ZSwgbWF4UG9pbnRzfSlcbiAgfVxuXG4gIGZ1bmN0aW9uIGhhbmRsZVNjb3JlSW5wdXQoc3R1ZGVudElkLCBzdHVkZW50U2NvcmUpXG4gIHtcbiAgICBpZigoIWRpZ2l0c09yTVJlZ2V4LnRlc3Qoc3R1ZGVudFNjb3JlKSAmJiBzdHVkZW50U2NvcmUgIT09ICcnKSB8fCBwYXJzZUludChzdHVkZW50U2NvcmUpID4gOTk5KSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9XG4gICAgaWYgKCFpc05hTihwYXJzZUludChzdHVkZW50U2NvcmUpKSl7XG4gICAgICBzdHVkZW50U2NvcmUgPSBwYXJzZUludChzdHVkZW50U2NvcmUpXG4gICAgfSBlbHNlIGlmIChzdHVkZW50U2NvcmUubGVuZ3RoID4gMSkge1xuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgbGV0IHNjb3JlcyA9IHsuLi5zdGF0ZS5zY29yZXN9XG4gICAgc2NvcmVzW3N0dWRlbnRJZF0gPSBzdHVkZW50U2NvcmVcblxuICAgIHNldFN0YXRlKHsgLi4uc3RhdGUsIHNjb3JlcyB9KVxuICB9XG5cblxuXG4gIGZ1bmN0aW9uIGNoZWNrSW5wdXRGaWVsZHMoc2NvcmVzKVxuICB7XG4gICAgbGV0IGVycm9yQ2hlY2sgPSBmYWxzZVxuXG4gICAgaWYgKCFzdGF0ZS5hc3NpZ25tZW50VGl0bGUubGVuZ3RoIHx8ICFzdGF0ZS5tYXhQb2ludHMgKSB7XG4gICAgICBzZXRTdGF0ZSh7IC4uLnN0YXRlLCBlcnJvcjogdHJ1ZSB9KVxuICAgICAgZXJyb3JDaGVjayA9IHRydWVcbiAgICAgIGFsZXJ0KCdZb3UgbmVlZCB0byBmaWxsIG91dCB0aGUgaGlnaGxpZ2h0ZWQgZmllbGRzJylcbiAgICAgIHJldHVybiBmYWxzZVxuICAgIH1cblxuICAgIGlmIChhc3NpZ25tZW50cy5maW5kKCgoZXhpc3RpbmdBc3NpZ25tZW50KSA9PiBleGlzdGluZ0Fzc2lnbm1lbnQudGl0bGUgPT09IHN0YXRlLmFzc2lnbm1lbnRUaXRsZSkpKVxuICAgIHtcbiAgICAgIGFsZXJ0KCdBbiBhc3NpZ25tZW50IHdpdGggdGhpcyB0aXRsZSBhbHJlYWR5IGV4aXN0czsgcGxlYXNlIGNob29zZSBhIGRpZmZlcmVudCB0aXRsZS4nKVxuICAgICAgcmV0dXJuIGZhbHNlXG4gICAgfVxuXG4gICAgZm9yICh2YXIgc2NvcmUgaW4gc2NvcmVzKSB7XG4gICAgICBpZiAoc2NvcmUgPT09ICcnKSB7XG4gICAgICAgIGVycm9yQ2hlY2sgPSB0cnVlXG4gICAgICB9XG4gICAgfVxuXG4gICAgaWYgKCFzY29yZXNbc2NvcmVzLmxlbmd0aCAtIDFdKSB7XG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9IGVsc2Uge1xuICAgICAgc2NvcmVzID0gc2NvcmVzLnRvU3RyaW5nKClcbiAgICB9XG4gICAgaWYoZXJyb3JDaGVjaykge1xuICAgICAgc2V0U3RhdGUoey4uLnN0YXRlLCBlcnJvcjogdHJ1ZX0pXG4gICAgICByZXR1cm4gZmFsc2VcbiAgICB9IGVsc2Uge1xuICAgICAgc2V0U3RhdGUoey4uLnN0YXRlLCBlcnJvcjogZmFsc2V9KVxuICAgIH1cbiAgICByZXR1cm4gdHJ1ZVxuICB9XG5cbiAgZnVuY3Rpb24gc3VibWl0U2NvcmVzKGV2ZW50KVxuICB7XG4gICAgZXZlbnQucHJldmVudERlZmF1bHQoKVxuXG4gICAgbGV0IHthc3NpZ25tZW50VGl0bGUsIG1heFBvaW50cywgc2NvcmVzfSA9IHN0YXRlXG5cbiAgICBsZXQgaW5wdXRFcnJvciA9IGZhbHNlXG5cbiAgICBzY29yZXMgPSBzdHVkZW50cy5tYXAoXG4gICAgICBzdHVkZW50ID0+IHtcbiAgICAgICAgaWYgKGlucHV0RXJyb3IpIHJldHVyblxuXG4gICAgICAgIGlmIChzY29yZXNbc3R1ZGVudC5pZF0gPT09ICdNJyB8fCAhaXNOYU4ocGFyc2VJbnQoc2NvcmVzW3N0dWRlbnQuaWRdKSkpIHtcbiAgICAgICAgICBpZiAoc2NvcmVzW3N0dWRlbnQuaWRdID09PSAnTScpIHNjb3Jlc1tzdHVkZW50LmlkXSA9IDAgXG4gICAgICAgICAgcmV0dXJuIGB1c2VyLCR7YXNzaWdubWVudFRpdGxlfSwke3Njb3Jlc1tzdHVkZW50LmlkXX0sJHttYXhQb2ludHN9LCR7c3R1ZGVudC5pZH0sJHtjbGFzc0lkfWBcbiAgICAgICAgfSBlbHNlIHtcbiAgICAgICAgICBzZXRTdGF0ZSh7IC4uLnN0YXRlLCBlcnJvcjogdHJ1ZSB9KVxuICAgICAgICAgIGlucHV0RXJyb3IgPSB0cnVlXG4gICAgICAgIH1cbiAgICAgIH1cbiAgICApXG5cbiAgICBpZiAoaW5wdXRFcnJvcikgcmV0dXJuXG4gICAgaW5wdXRFcnJvciA9ICFjaGVja0lucHV0RmllbGRzKGFzc2lnbm1lbnRUaXRsZSwgc2NvcmVzKVxuICAgIGlmIChpbnB1dEVycm9yKSByZXR1cm5cblxuICAgIGNvbnRyb2xsZXIuYXNzaWdubWVudC5hZGQoc2NvcmVzKVxuICAgIC50aGVuKCgpID0+IHtcbiAgICAgIHNldFN0YXRlKHsuLi5kZWZhdWx0U3RhdGV9KVxuICAgICAgbG9hZEFzc2lnbm1lbnRzKClcbiAgICB9KVxuICAgIC5jYXRjaCgoZXJyb3IpID0+IGNvbnNvbGUuZXJyb3IoZXJyb3IpKVxuICB9XG5cblxuICByZXR1cm4gKFxuICAgIDw+XG4gICAgICA8aGVhZGVyIGNsYXNzTmFtZT1cImNvbnRhaW5lci1mbHVpZFwiPlxuICAgICAgICA8R29CYWNrIHVybD17Jy8nICsgY2xhc3NJZH0gdGV4dD17XCJOZXcgQXNzaWdubWVudFwifS8+XG4gICAgICAgIDxoMiBzdHlsZT17e2NvbG9yOicjNzc3J319IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+e3RpdGxlfTwvaDI+XG4gICAgICAgIDxoMSBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiIHN0eWxlPXt7Ym94U2l6aW5nOiAnYm9yZGVyLWJveCcscGFkZGluZzogJy4zNzVyZW0gLjc1cmVtJywgZm9udFNpemU6ICczcmVtJyxmb250V2VpZ2h0OiAnYm9sZGVyJ319PntjbGFzc0F2ZXJhZ2V9PC9oMT5cbiAgICAgIDwvaGVhZGVyPlxuICAgICAgPGRpdj5cbiAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJjb250YWluZXItZmx1aWRcIj5cbiAgICAgICAgICA8ZGl2IGNsYXNzTmFtZT1cInRleHQtY2VudGVyXCI+XG4gICAgICAgICAgICA8ZGl2IHN0eWxlPXt7ICdkaXNwbGF5JzogJ2lubGluZS1ibG9jaycgfX0+XG4gICAgICAgICAgICAgIDxpbnB1dCB0eXBlPVwidGV4dFwiIGF1dG9Gb2N1cyBjbGFzc05hbWU9eyghc3RhdGUuYXNzaWdubWVudFRpdGxlICYmIHN0YXRlLmVycm9yKSA/ICdlcnJvcicgOiB1bmRlZmluZWR9IHZhbHVlPXtzdGF0ZS5hc3NpZ25tZW50VGl0bGV9IHBsYWNlaG9sZGVyPXtcIkFzc2lnbm1lbnQgVGl0bGVcIn0gb25DaGFuZ2U9eyh7Y3VycmVudFRhcmdldH0pID0+IGhhbmRsZUFzc2lnbm1lbnROYW1lSW5wdXQoY3VycmVudFRhcmdldC52YWx1ZSl9Lz5cbiAgICAgICAgICAgICAgb3V0IG9mJm5ic3A7XG4gICAgICAgICAgICAgIDxpbnB1dCBpZD1cIm1heFBvaW50c0lucHV0XCIgdHlwZT1cIm51bWJlclwiIG1pbj1cIjFcIiBtYXg9XCI5OTlcIiB2YWx1ZT17c3RhdGUubWF4UG9pbnRzfSBvbkNoYW5nZT17KHtjdXJyZW50VGFyZ2V0fSkgPT4gaGFuZGxlTWF4UG9pbnRzSW5wdXQocGFyc2VJbnQoY3VycmVudFRhcmdldC52YWx1ZSkpfSAvPiBwb2ludHNcbiAgICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICAgIDx0YWJsZSBjbGFzc05hbWU9XCJ0YWJsZSB0YWJsZS1ob3ZlciB0YWJsZS1zdHJpcGVkXCI+XG4gICAgICAgICAgICA8dGhlYWQ+XG4gICAgICAgICAgICAgIDx0ciBjbGFzc05hbWU9XCJkLWZsZXhcIj5cbiAgICAgICAgICAgICAgICA8dGggY2xhc3NOYW1lPVwiY29sLTNcIi8+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC0yXCI+TmFtZTwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC0yXCIvPlxuICAgICAgICAgICAgICAgIDx0aCBjbGFzc05hbWU9XCJjb2wtMlwiPlBvaW50czwvdGg+XG4gICAgICAgICAgICAgICAgPHRoIGNsYXNzTmFtZT1cImNvbC0zXCIvPlxuICAgICAgICAgICAgICA8L3RyPlxuICAgICAgICAgICAgPC90aGVhZD5cbiAgICAgICAgICAgIDx0Ym9keT5cbiAgICAgICAgICAgICAgPFN1c3BlbnNlIGZhbGxiYWNrPXs8dHIgY2xhc3NOYW1lPVwiZC1mbGV4XCI+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiY29sLTNcIi8+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8dGQgY2xhc3NOYW1lPVwiY29sLTJcIj5Mb2FkaW5nLi4uPC90ZD5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L3RyPn0+XG4gICAgICAgICAgICAgICAgPFJvd3MgZGF0YT17c3R1ZGVudHN9IHNjb3Jlcz17c3RhdGUuc2NvcmVzfSBtYXg9e3N0YXRlLm1heFBvaW50c30gaGFuZGxlU2NvcmVJbnB1dD17aGFuZGxlU2NvcmVJbnB1dH0gZXJyb3I9e3N0YXRlLmVycm9yfS8+XG4gICAgICAgICAgICAgIDwvU3VzcGVuc2U+XG4gICAgICAgICAgICA8L3Rib2R5PlxuICAgICAgICAgIDwvdGFibGU+XG4gICAgICAgICAgPGRpdiBjbGFzc05hbWU9XCJ0ZXh0LWNlbnRlclwiPlxuICAgICAgICAgICAgPGJ1dHRvbiBjbGFzc05hbWU9XCJidG4gYnRuLXN1Y2Nlc3NcIiBvbkNsaWNrPXtzdWJtaXRTY29yZXN9PlN1Ym1pdDwvYnV0dG9uPlxuICAgICAgICAgIDwvZGl2PlxuICAgICAgICA8L2Rpdj5cbiAgICAgIDwvZGl2PlxuICAgIDwvPlxuICApXG59Il0sIm5hbWVzIjpbInVybCIsInRleHQiLCJzdHlsZSIsInBhZGRpbmciLCJ0byIsInRleHREZWNvcmF0aW9uIiwiY29sb3IiLCJmb250V2VpZ2h0IiwiY2xhc3NOYW1lIiwiUm93cyIsImxhenkiLCJkaWdpdHNPck1SZWdleCIsInByb3BzIiwidGl0bGUiLCJjbGFzc0lkIiwic3R1ZGVudHMiLCJjbGFzc0F2ZXJhZ2UiLCJhc3NpZ25tZW50cyIsImxvYWRBc3NpZ25tZW50cyIsImRlZmF1bHRTdGF0ZSIsImFzc2lnbm1lbnRUaXRsZSIsIm1heFBvaW50cyIsInNjb3JlcyIsImVycm9yIiwic3RhdGUiLCJzZXRTdGF0ZSIsInVzZVN0YXRlIiwiYm94U2l6aW5nIiwiZm9udFNpemUiLCJ0eXBlIiwiYXV0b0ZvY3VzIiwidW5kZWZpbmVkIiwidmFsdWUiLCJwbGFjZWhvbGRlciIsIm9uQ2hhbmdlIiwiY3VycmVudFRhcmdldCIsImhhbmRsZUFzc2lnbm1lbnROYW1lSW5wdXQiLCJpZCIsIm1pbiIsIm1heCIsImlzTmFOIiwiaGFuZGxlTWF4UG9pbnRzSW5wdXQiLCJwYXJzZUludCIsIlN1c3BlbnNlIiwiZmFsbGJhY2siLCJkYXRhIiwiaGFuZGxlU2NvcmVJbnB1dCIsInN0dWRlbnRJZCIsInN0dWRlbnRTY29yZSIsInRlc3QiLCJsZW5ndGgiLCJvbkNsaWNrIiwiZXZlbnQiLCJwcmV2ZW50RGVmYXVsdCIsImlucHV0RXJyb3IiLCJtYXAiLCJzdHVkZW50IiwiZXJyb3JDaGVjayIsImFsZXJ0IiwiZmluZCIsImV4aXN0aW5nQXNzaWdubWVudCIsInNjb3JlIiwidG9TdHJpbmciLCJjaGVja0lucHV0RmllbGRzIiwiY29udHJvbGxlciIsInRoZW4iLCJjYXRjaCIsImNvbnNvbGUiXSwic291cmNlUm9vdCI6IiJ9